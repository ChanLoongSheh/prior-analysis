Through the group meeting with my supervisor, he thought that I need to reconsider the weighting function of the temperature and dew point profile. Here is his point. There is no way that a temperature or dewpoint vertical profile only changes 1K in 1 layer in the real world. Therefore, further analysis of the observed radiance change by the surface under this assumption is meaningless. If we do the principal component analysis, the dimensionality of one temperature or dewpoint curve will be reduced from 21 to 3 (21 for real physical sampled points, 3 for coefficients of different principal component vectors). So we can just consider the coefficients. While doing the statistics of the 888 pairs of profiles, we can make statistics of the numerical distribution density of each coefficient to see differential element of the coefficient can produce how much of the differential element of temperature or dew point, and finally, the differential element of surface radiance in the wavelength domain.

Now you can write a project proposal. The main purpose of this project is to define well how many filters and what wavelength bands these filters are located in. The whole project should realize the following functions: 
1. The PCA dimensional reduction of 888 pairs of temperature or dew point profiles. Select the several top PC to ensure the fluctuation of the original curve can be reconstructed.
2. Make statistics of the coefficients of all PC to see the numerical distribution density of each coefficient. 
3. Select the bin size of the coefficients distribution to ensure the differential element will not miss the feature peak of coefficients distribution curve.
4. Select one pair of the most representative temperature-dewpoint profile from whole 888 pairs of curves. Think about which statistical indicator to select temperature-dewpoint profile in my case is proper.
5. Now we have the differential element of coefficient and a pair of representative temperature-dewpoint profile. Calculate the profiles after original two profiles plus the differential element of coefficient. 

In proposal you should also think about the technology stack we better use in realizing the whole functional modules, make it clear that which stack can realize which functional module and the what is the relationship between functional modules. List a detailed step-by-step implementation plan. To start from the most basic and important aspects, each step can be left as a separate step to be implemented by others.

Step1:
Refer to my README.md file. This is a Project Proposal: Redefining Atmospheric Weighting Functions using Principal Component Analysis for Optimal Filter Selection. Read it carefully and focus on the Step 1: Data Loading and Preparation, use python to realize this step and do not worry about other steps. The data is in the root="C:\Users\24573\OneDrive - The University of Hong Kong\PhD\Project\atmospheric sounding\Data\888ground Radiance". There are 888 mat files with name pattern "Rad_NewModel66layers_TDpP4Aerosol_HKObservatory0-100-5000m_6-1-15km_%d.mat", where '%d' represents the index of the mat files. Each mat file has variables: lambda, H, T_DP, T_atm. Because lambda and H in all 888 mat files are same, so just save one lambda csv file and one H csv file in current path. T_atm and T_DP are different among 888 mat files. Save T_atm and T_DP as two csv files separately. T_atm and T_DP in one mat file have 61 elements, only save the first 21 elements (the first 21 elements represent 2km sampled points). And you should let the row index of csv files equal to the '%d', the index of the mat files. All output csv files shall be saved to a new folder. Since you finish the data reading and save, you can use these data to realize the Step 1: Data Loading and Preparation. Besides, generate a detailed log record file to conclude what (annotate the detailed meanings of the output files) and where is the output files.

Step2:
Refer to my README.md file. This is a Project Proposal: Redefining Atmospheric Weighting Functions using Principal Component Analysis for Optimal Filter Selection. Read it carefully and focus on the Step 2: Perform Principal Component Analysis, use python to realize this step and do not worry about other steps. The detailed Step 1 running record is processing_inventory.log. All output files shall be saved to a new folder. Also, generate a detailed log record file to conclude what (annotate the detailed meanings of the output files) and where is the output files.

Step3:
Refer to my README.md file. This is a Project Proposal: Redefining Atmospheric Weighting Functions using Principal Component Analysis for Optimal Filter Selection. Read it carefully and focus on the Step 3: Statistical Analysis of PCA Coefficients. Use python to realize this step and do not worry about other steps. The detailed Step 2 running record is Step2_PCA_inventory.log. All output files shall be saved to a new folder named without timestamp. Do not run the code with command-line parsing. Also, generate a detailed log record file to conclude what (annotate the detailed meanings of the output files) and where is the output files. output csv files of step 2 are all with column header and row index.

Step4:
Refer to my README.md file. This is a Project Proposal: Redefining Atmospheric Weighting Functions using Principal Component Analysis for Optimal Filter Selection. Read it carefully and focus on the Step 4: Select a Representative Atmospheric Profile. Use python to realize this step and do not worry about other steps. The detailed Step 1 running record is processing_inventory.log. All output files shall be saved to a new folder named without timestamp. Do not run the code with command-line parsing. Also, generate a detailed log record file to conclude what (annotate the detailed meanings of the output files) and where is the output files. output csv files of step 1 are all with column header and row index.

Step5:
Refer to my README.md file. This is a Project Proposal: Redefining Atmospheric Weighting Functions using Principal Component Analysis for Optimal Filter Selection. Read it carefully and focus on the Step 5: Generate Perturbed Profiles. Use python to realize this step and do not worry about other steps. The detailed Step 1 2, 3 and 4 running record are 'processing_inventory.log', 'Step2_PCA_inventory.log', 'Step3_Stats_inventory.log' and 'step4_processing_inventory.log'. All output files shall be saved to a new folder named without timestamp. Do not run the code with command-line parsing. Also, generate a detailed log record file to conclude what (annotate the detailed meanings of the output files) and where is the output files. output csv files of step 1 2, 3 and step 4 are all with column header and row index.

Step6:
Refer to my README.md file. This is a Project Proposal: Redefining Atmospheric Weighting Functions using Principal Component Analysis for Optimal Filter Selection. Read it carefully and focus on the Step 6: Generation of PCA-based Radiance Perturbation Spectra (Weighting Functions), use python to realize this step and do not worry about other steps.

The data is in the root="C:\Users\24573\OneDrive - The University of Hong Kong\PhD\Project\atmospheric sounding\Data\DeltaC_TDp_change_forChenglong". There are 18 mat files with name pattern "Rad_DeltaC_TDp_index%d.mat", where '%d' represents the index of the mat files.

Each mat file has 9 double variables:
H 61x1 double (Height)
P_atm 61x1 double (Pressure as the function of height)
RH 61x1 double (Relative humidity as the function of height)
T_DP 61x1 double (Dew point as the function of height)
T_atm 61x1 double (Temperature as the function of height)
lambda 3501x1 double (lambda from 2.5 um to 20um)
rad_um 3501x1 double (downwelling spectral radiance in lambda domain)
rad_wavenum 3501x1 double (downwelling spectral radiance in wavenumber domain)
wavenum 3501x1 double (wavenumber in 2.5 um to 20um)

and
index1 is the result of +Δc1
index2 is the result of +Δc2
... ...
index9 is the result of +Δc9
index10 is the result of -Δc1
index 11 is the result of -Δc2
... ...
index18 is the result of -Δc9

And 1 mat with the name "Rad_NewModel66layers_TDpP4Aerosol_HKObservatory0-100-5000m_6-1-15km_280.mat". It is the representative sample. It has same variables structure as described above.

T_atm and T_DP in one mat file have 61 elements, only the first 21 elements (the first 21 elements represent 2km sampled points) change among these mat files. All output files shall be saved to a new folder named without timestamp. Do not run the code with command-line parsing. Also, generate a detailed log record file to conclude what (annotate the detailed meanings of the output files) and where is the output files. output csv files of step 1 are all with column header and row index. you can also refer the step 5 python script and record log file to generate the step 6 python script.

Step7:
Refer to my README.md file. This is a Project Proposal: Redefining Atmospheric Weighting Functions using Principal Component Analysis for Optimal Filter Selection. Read it carefully and focus on the Step 7: Information Content Analysis for Optimal Filter Placement. Use python to realize this step and do not worry about other steps. The detailed Step 6 running record is "Step6_WeightingFunctions_inventory.log". And detailed step 6 python script is "step6_weighting_functions.py". All output files shall be saved to a new folder named without timestamp. Do not run the code with command-line parsing. Also, generate a detailed log record file to conclude what (annotate the detailed meanings of the output files) and where is the output files. output csv files of step 6 are all with column header and row index.

Debug:
Refer to my README.md file. This is a Project Proposal: Redefining Atmospheric Weighting Functions using Principal Component Analysis for Optimal Filter Selection. Read it carefully and focus on the Step 3: Statistical Analysis of PCA Coefficients. We have already used python script "step3_stats_c.py" to realize this step and do not focus on other steps. The detailed Step 3 running record is 'Step3_Stats_inventory.log'. I would like to know:
1. What established rule has been used in the step3_stats_c.py?
2. Why used them (general principle)?
3. How to construct the smooth PDF according to the histograms? 







